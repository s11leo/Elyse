(()=>{document.querySelector("#wallet-connect .button").addEventListener("click",(async()=>{if(window.solana&&window.solana.isPhantom)try{const e=await window.solana.connect({onlyIfTrusted:!1});console.log("Connected with Public Key:",e.publicKey.toString());const n=e.publicKey.toString(),o=`${n.slice(0,4)}...${n.slice(-4)}`;document.querySelector("#wallet-connect .button").textContent=o,localStorage.setItem("walletAddress",n)}catch(e){console.error("Error connecting to Phantom wallet:",e)}else alert("Phantom wallet not found! Please install it.")})),document.addEventListener("modalFullyLoaded",(async e=>{if(console.log("Event modalFullyLoaded:",e.detail),"#modal2"===e.detail.modalId)try{const e=localStorage.getItem("walletAddress");if(!e)return void console.error("walletAddress is not found in localStorage");console.log("address = localStorage",e),setTimeout((async()=>{await getTokensBalance(new solanaWeb3.PublicKey(e))}),2500)}catch(e){console.error("Error connecting to Phantom wallet:",e)}})),document.addEventListener("DOMContentLoaded",(()=>{(async function(){const e=localStorage.getItem("walletAddress");if(e)try{const n=new solanaWeb3.PublicKey(e),o=await async function(e){const n=new solanaWeb3.Connection(solanaWeb3.clusterApiUrl("devnet"),"confirmed");return await n.getBalance(e)/solanaWeb3.LAMPORTS_PER_SOL}(n);console.log("SOL Balance:",o);const t=await async function(e){const n=new solanaWeb3.Connection(solanaWeb3.clusterApiUrl("devnet"),"confirmed"),o=await n.getParsedTokenAccountsByOwner(e,{programId:new solanaWeb3.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA")});let t=[];for(const{account:e}of o.value){const n=e.data.parsed.info.tokenAmount.uiAmount;t.push({balance:n})}return t}(n);t.length>0?(console.log("Token Balances:"),t.forEach((e=>{console.log(e.balance)}))):console.log("No SPL tokens found.");const a=new CustomEvent("walletInfo",{detail:{address:e,solBalance:o,splTokenBalances:t}});document.dispatchEvent(a)}catch(e){console.error("Error fetching wallet info:",e)}else console.error("Wallet address is not found in localStorage")})().catch(console.error)})),document.addEventListener("DOMContentLoaded",(n=>{document.getElementById("faucet").addEventListener("click",(function(){fetch("https://hackathon-test-project.space:3000/api/secret").then((e=>e.json())).then((n=>{(async function(n){const o=new solanaWeb3.Connection(solanaWeb3.clusterApiUrl("devnet"),"confirmed"),t=new Token(o,mintAddress,e,s);let a;try{a=await t.getOrCreateAssociatedAccountInfo(i)}catch(e){return void console.error("Не удалось найти или создать токеновый аккаунт получателя:",e)}const l=n.split(",").map((e=>parseInt(e,10))),c=new Uint8Array(l),s=solanaWeb3.Keypair.fromSecretKey(c),r=localStorage.getItem("walletAddress");if(!r)return void console.error("recipientPublicKey not found in localStorage");const i=new solanaWeb3.PublicKey(r),d=new solanaWeb3.PublicKey("FHeKWXkA6YkFoMjFibnvG3qrZ9Mada7ENpk1V4WwXK9H");let u=new solanaWeb3.Transaction;u.add(new solanaWeb3.TransactionInstruction({programId:d,keys:[{pubkey:s.publicKey,isSigner:!0,isWritable:!1},{pubkey:new solanaWeb3.PublicKey("AiDZwVWgWRYGNAV39XBzMKV5GqSaBG8zgtAnCYTrqsHU"),isSigner:!1,isWritable:!0},{pubkey:a.address,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1}],data:new Uint8Array([])}));const w=await solanaWeb3.sendAndConfirmTransaction(o,u,[s]);console.log("Транзакция подписана и отправлена. ID транзакции:",w)})(n.data.data.privateKey).catch((e=>console.log(e)))})).catch((e=>console.error("error reciving Key:",e)))}))}));const e=new solanaWeb3.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA")})();